#############################
# BloodDonation – Production
# обновление данных: 1 раз в 5 дней
#############################

services:
  # ──────────────────────────
  # REST API + static frontend
  # ──────────────────────────
  api:
    build: .
    env_file: .env
    volumes:
      - ./backend/db:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/donations"]
      interval: 1m
      retries: 3

  # ──────────────────────────
  # Еженедельный ETL-pipeline
  # ──────────────────────────
  pipeline:
    environment:
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    build: .
    env_file: .env
    volumes:
      - ./backend/db:/data
    command:
      - /bin/sh
      - -c
      - |
        while true; do
          SECS=$$(python -c "from datetime import datetime, timedelta, timezone; now=datetime.now(timezone.utc); t=now.replace(hour=3, minute=20, second=0, microsecond=0); target=(t+timedelta(days=1)) if t<=now else t; print(int((target-now).total_seconds()))")
          echo "[Pipeline] next run in $$SECS s until 03:20 UTC"
          sleep $$SECS
          echo "[Pipeline] --- $$(date -u) --- start"
          python -m backend.data_pipeline.run_pipeline
          echo "[Pipeline] --- $$(date -u) --- finish"
          sleep 60
        done
    restart: unless-stopped

  # ──────────────────────────
  # HTTPS-прокси + статик
  # ──────────────────────────
  caddy:
    image: caddy:2-alpine
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend:/usr/share/caddy
      - caddy_data:/data
      - caddy_config:/config
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

# ──────────────
# Persisted data
# ──────────────
volumes:
  caddy_data:
  caddy_config:
